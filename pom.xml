<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ws.softlabs.kino</groupId>
	<artifactId>kino-app</artifactId>
	<version>0.0.5-dev</version>
	<packaging>war</packaging>
	<name>KinoSite</name>

	<!-- Specify hard-coded project properties here -->
	<properties>
		<app.name>${project.artifactId}</app.name>
		<app.version>${project.version}</app.version>
		<gae.version>1.5.0</gae.version>
		<gwt.version>2.2.0</gwt.version>
		<gae.port>8080</gae.port>
		<gwt.style>DETAILED</gwt.style>
		<!-- SET WITH GROOVY SCRIPT <gae.application.version>${app.version}</gae.application.version> -->
		<gae.application>ws-softlabs-kino</gae.application>

		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>

		<!-- Specify AppEngine version for your project. It should match SDK version 
			pointed to by ${gae.home} property (Typically, one used by your Eclipse plug-in) -->
	</properties>


	<!-- REPOSITORIES -->
	<repositories>
		<repository>
			<id>DataNucleus_Repos2</id>
			<name>DataNucleus Repository</name>
			<url>http://www.datanucleus.org/downloads/maven2</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>maven-gae-plugin-repo</id>
			<name>Maven Google App Engine Repository</name>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</pluginRepository>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<!-- DEPENDENCIES -->
	<dependencies>

		<!-- SOFTLABS -->
		<dependency>
			<groupId>ws.softlabs.lib</groupId>
			<artifactId>util</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>ws.softlabs.lib</groupId>
			<artifactId>kino-model</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>ws.softlabs.lib</groupId>
			<artifactId>kino-model</artifactId>
			<version>0.0.4</version>
			<classifier>sources</classifier>
		</dependency>
		<dependency>
			<groupId>ws.softlabs.lib</groupId>
			<artifactId>kino-dao</artifactId>
			<version>0.0.4</version>
		</dependency>
		<dependency>
			<groupId>ws.softlabs.lib</groupId>
			<artifactId>parser-lib</artifactId>
			<version>0.0.4</version>
		</dependency>

		<!-- LOG4J -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.16</version>
		</dependency>

		<!-- DATANUCLEUS -->
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-jpa</artifactId>
			<version>1.1.5</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>1.1.5</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.google.appengine.orm</groupId>
			<artifactId>datanucleus-appengine</artifactId>
			<version>1.0.8</version>
		</dependency>

		<!-- PERSISTENCE / JPA / JTA / JDO -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo2-api</artifactId>
			<version>2.3-eb</version>
			<exclusions>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>transaction-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- GAE dependencies -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<!-- GWT dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- J2EE Servlet API. We need it to compile IndexServlet class. You can 
			probably remove it, if you don't explicitly use Servlets -->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Make use of JSP tags. Remove, if you don't use JSPs -->
		<dependency>
			<artifactId>standard</artifactId>
			<groupId>taglibs</groupId>
			<version>1.1.2</version>
			<type>jar</type>
			<scope>runtime</scope>
		</dependency>

		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<!-- GAE libraries for local testing as described here: http://code.google.com/appengine/docs/java/howto/unittesting.html -->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<!-- BUILD -->
	<build>
		<outputDirectory>target/${app.name}-${app.version}/WEB-INF/classes</outputDirectory>
		<!-- PLUGINS -->
		<plugins>
			<!-- MAVEN DATANUCLEUS -->
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>1.1.4</version>
				<configuration>
					<mappingIncludes>**/*.class</mappingIncludes>
					<verbose>true</verbose>
					<enhancerName>ASM</enhancerName>
					<api>JDO</api>
				</configuration>
				<executions>
					<execution>
						<phase>process-classes</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-core</artifactId>
						<version>1.1.5</version>
						<exclusions>
							<exclusion>
								<groupId>javax.transaction</groupId>
								<artifactId>transaction-api</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-rdbms</artifactId>
						<version>1.1.5</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-enhancer</artifactId>
						<version>1.1.4</version>
					</dependency>
					<dependency>
						<groupId>javax.jdo</groupId>
						<artifactId>jdo2-api</artifactId>
						<version>2.3-eb</version>
					</dependency>
					<dependency>
						<groupId>org.datanucleus</groupId>
						<artifactId>datanucleus-jpa</artifactId>
						<version>1.1.5</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- MAVEN WAR PLUGIN -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<webResources>
						<webResource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/*.xml</include>
							</includes>
						</webResource>
					</webResources>
				</configuration>
			</plugin>

			<!-- Maven GWT plugin (ex. http://gwt-maven.googlecode.com/svn/docs/maven-googlewebtoolkit2-plugin/index.html) 
				http://mojo.codehaus.org/gwt-maven-plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.2.0</version>
				<configuration>
					<logLevel>INFO</logLevel>

					<!-- match -Dgae.port -->
					<port>${gae.port}</port>

					<!-- This is for generating Asynch interfaces -->
					<!-- <servicePattern>**/client/*Service.java</servicePattern> -->

					<extraJvmArgs>-Xmx512m</extraJvmArgs>
					<!--<jvm>${JAVA_HOME}/bin/java</jvm> -->
					<!--<noServer>false</noServer> -->
					<server>com.google.appengine.tools.development.gwt.AppEngineLauncher</server>

					<runTarget>/kinoapp.html</runTarget>
					<style>DETAILED</style>
					<!--
					<webXml>war/WEB-INF/web.xml</webXml>
					-->
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
				<executions>
					<!-- <execution> <id>generateAsynch</id> <phase>generate-sources</phase> 
						<goals> <goal>generateAsync</goal> </goals> </execution> -->
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- MAVEN GAE PLUGIN (net.kindleit) -->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.8.4</version>
				<configuration>
					<jvmFlags>
						<jvmFlag>-Xdebug</jvmFlag>
						<jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000</jvmFlag>
						<jvmFlag>-Dmail.log_mail_level=WARNING</jvmFlag>
						<jvmFlag>-Dmail.log_mail_body=true</jvmFlag>
					</jvmFlags>
					<severity>0</severity>
					<serverId>funny-pages</serverId>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>net.kindleit</groupId>
						<artifactId>gae-runtime</artifactId>
						<version>${gae.version}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Upload application to the appspot automatically, during release:perform -->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!-- Java compiler version -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- RUNNING GROOVY SCRIPT -->
			<plugin>
				<groupId>org.codehaus.groovy.maven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>tools/utils.groovy</source>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<!-- <resources> <resource> <directory>src/main/webapp</directory> <filtering>true</filtering> 
			<includes> <include>**/*.xml</include> </includes> </resource> </resources> -->
	</build>

	<profiles>
		<!-- We can configure our integration server to activate this profile and 
			perform gae:deploy, thus uploading latest snapshot to the http://1.latest.<applicationName>.appspot.com 
			automatically -->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>

				<!-- Produce pretty JS during GWT compilation for test environment -->
				<gwt.style>PRETTY</gwt.style>
			</properties>
		</profile>

		<!-- This profile will activate automatically during release and upload 
			application to the http://2.latest.<applicationName>.appspot.com (We might 
			want to set the 2nd version as our applications Default version to be accessible 
			at http://<applicationName>.appspot.com) -->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!-- During release, set application version in appengine-web.xml to 
					2 -->
				<gae.application.version>release</gae.application.version>

				<!-- Produce compressed JS during GWT compilation for production environment -->
				<gwt.style>OBFUSCATED</gwt.style>
			</properties>
		</profile>
	</profiles>

</project>
